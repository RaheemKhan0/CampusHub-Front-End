/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AppController_getHello"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/servers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** lists all the servers in a particular type */
        get: operations["ServerController_listServer"];
        put?: never;
        /**
         * Create a new Server
         * @description Creates a new Server and returns its public view
         */
        post: operations["ServerController_createServer"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/servers/{serverId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve a server by id */
        get: operations["ServerController_getServer"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        /**
         * updating an existing Server
         * @description This updates the existing Server and return its public view
         */
        patch: operations["ServerController_update"];
        trace?: never;
    };
    "/servers/{serverId}/channels": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ChannelsController_list"];
        put?: never;
        post: operations["ChannelsController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/servers/{serverId}/channels/{channelId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["ChannelsController_find"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/servers/{serverId}/channels/{channelId}/members": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["ChannelsController_addMembers"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/servers/{serverId}/channels/{channelId}/members/{userId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post?: never;
        delete: operations["ChannelsController_removeMember"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/servers/{serverId}/channels/{channelId}/messages": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List messages in the channel */
        get: operations["MessagesController_listMessages"];
        put?: never;
        /** Create a new message in the channel */
        post: operations["MessagesController_create"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/degrees": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List all degrees */
        get: operations["DegreeController_listDegrees"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/degrees/{slug}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** Retrieve degree details by slug */
        get: operations["DegreeController_getDegree"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/degrees/{slug}/modules": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** List modules for a degree */
        get: operations["DegreeController_listModules"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sign-in/social": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sign in with a social provider */
        post: operations["socialSignIn"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/get-session": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Get the current session */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            session: components["schemas"]["Session"];
                            user: components["schemas"]["User"];
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sign-out": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sign out the current user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": Record<string, never>;
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            success?: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sign-up/email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sign up a user using email and password */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description The name of the user */
                        name: string;
                        /** @description The email of the user */
                        email: string;
                        /** @description The password of the user */
                        password: string;
                        /** @description The profile image URL of the user */
                        image?: string;
                        /** @description The URL to use for email verification callback */
                        callbackURL?: string;
                        /** @description If this is false, the session will not be remembered. Default is `true`. */
                        rememberMe?: boolean;
                    };
                };
            };
            responses: {
                /** @description Successfully created user */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Authentication token for the session */
                            token?: string | null;
                            user: {
                                /** @description The unique identifier of the user */
                                id: string;
                                /**
                                 * Format: email
                                 * @description The email address of the user
                                 */
                                email: string;
                                /** @description The name of the user */
                                name: string;
                                /**
                                 * Format: uri
                                 * @description The profile image URL of the user
                                 */
                                image?: string | null;
                                /** @description Whether the email has been verified */
                                emailVerified: boolean;
                                /**
                                 * Format: date-time
                                 * @description When the user was created
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description When the user was last updated
                                 */
                                updatedAt: string;
                            };
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Unprocessable Entity. User already exists or failed to create user. */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/sign-in/email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Sign in with email and password */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description Email of the user */
                        email: string;
                        /** @description Password of the user */
                        password: string;
                        /** @description Callback URL to use as a redirect for email verification */
                        callbackURL?: string | null;
                        rememberMe?: string | null;
                    };
                };
            };
            responses: {
                /** @description Success - Returns either session details or redirect URL */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @enum {boolean} */
                            redirect: false;
                            /** @description Session token */
                            token: string;
                            url?: null | null;
                            user: {
                                id: string;
                                email: string;
                                name?: string | null;
                                image?: string | null;
                                emailVerified: boolean;
                                /** Format: date-time */
                                createdAt: string;
                                /** Format: date-time */
                                updatedAt: string;
                            };
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/forget-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Send a password reset email to the user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The email address of the user to send a password reset email to */
                        email: string;
                        /** @description The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN */
                        redirectTo?: string | null;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status?: boolean;
                            message?: string;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reset-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Reset the password for a user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The new password to set */
                        newPassword: string;
                        /** @description The token to reset the password */
                        token?: string | null;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status?: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/verify-email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Verify the email of the user */
        get: {
            parameters: {
                query: {
                    /** @description The token to verify the email */
                    token: string;
                    /** @description The URL to redirect to after email verification */
                    callbackURL?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            user: {
                                /** @description User ID */
                                id: string;
                                /** @description User email */
                                email: string;
                                /** @description User name */
                                name: string;
                                /** @description User image URL */
                                image: string;
                                /** @description Indicates if the user email is verified */
                                emailVerified: boolean;
                                /** @description User creation date */
                                createdAt: string;
                                /** @description User update date */
                                updatedAt: string;
                            };
                            /** @description Indicates if the email was verified successfully */
                            status: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/send-verification-email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Send a verification email to the user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /**
                         * @description The email to send the verification email to
                         * @example user@example.com
                         */
                        email: string;
                        /**
                         * @description The URL to use for email verification callback
                         * @example https://example.com/callback
                         */
                        callbackURL?: string | null;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Indicates if the email was sent successfully
                             * @example true
                             */
                            status?: boolean;
                        };
                    };
                };
                /** @description Bad Request */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /**
                             * @description Error message
                             * @example Verification email isn't enabled
                             */
                            message?: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/change-email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The new email address to set must be a valid email address */
                        newEmail: string;
                        /** @description The URL to redirect to after email verification */
                        callbackURL?: string | null;
                    };
                };
            };
            responses: {
                /** @description Email change request processed successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Indicates if the request was successful */
                            status: boolean;
                            /**
                             * @description Status message of the email change process
                             * @enum {string|null}
                             */
                            message?: "Email updated" | "Verification email sent" | null;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Unprocessable Entity. Email already exists */
                422: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/change-password": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Change the password of the user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The new password to set */
                        newPassword: string;
                        /** @description The current password is required */
                        currentPassword: string;
                        /** @description Must be a boolean value */
                        revokeOtherSessions?: boolean | null;
                    };
                };
            };
            responses: {
                /** @description Password successfully changed */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description New session token if other sessions were revoked */
                            token?: string | null;
                            user: {
                                /** @description The unique identifier of the user */
                                id: string;
                                /**
                                 * Format: email
                                 * @description The email address of the user
                                 */
                                email: string;
                                /** @description The name of the user */
                                name: string;
                                /**
                                 * Format: uri
                                 * @description The profile image URL of the user
                                 */
                                image?: string | null;
                                /** @description Whether the email has been verified */
                                emailVerified: boolean;
                                /**
                                 * Format: date-time
                                 * @description When the user was created
                                 */
                                createdAt: string;
                                /**
                                 * Format: date-time
                                 * @description When the user was last updated
                                 */
                                updatedAt: string;
                            };
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/update-user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Update the current user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description The name of the user */
                        name?: string;
                        /** @description The image of the user */
                        image?: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Indicates if the update was successful */
                            status?: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/delete-user": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Delete the user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The callback URL to redirect to after the user is deleted */
                        callbackURL?: string | null;
                        /** @description The password of the user is required to delete the user */
                        password?: string | null;
                        /** @description The token to delete the user is required */
                        token?: string | null;
                    };
                };
            };
            responses: {
                /** @description User deletion processed successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Indicates if the operation was successful */
                            success: boolean;
                            /**
                             * @description Status message of the deletion process
                             * @enum {string}
                             */
                            message: "User deleted" | "Verification email sent";
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/reset-password/{token}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Redirects the user to the callback URL with the token */
        get: {
            parameters: {
                query?: {
                    callbackURL?: string;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            token?: string;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/request-password-reset": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Send a password reset email to the user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The email address of the user to send a password reset email to */
                        email: string;
                        /** @description The URL to redirect the user to reset their password. If the token isn't valid or expired, it'll be redirected with a query parameter `?error=INVALID_TOKEN`. If the token is valid, it'll be redirected with a query parameter `?token=VALID_TOKEN */
                        redirectTo?: string | null;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status?: boolean;
                            message?: string;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/list-sessions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List all active sessions for the user */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": components["schemas"]["Session"][];
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/revoke-session": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Revoke a single session */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": {
                        /** @description The token to revoke */
                        token: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Indicates if the session was revoked successfully */
                            status: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/revoke-sessions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Revoke all sessions for the user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": Record<string, never>;
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Indicates if all sessions were revoked successfully */
                            status: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/revoke-other-sessions": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Revoke all other sessions for the user except the current one */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": Record<string, never>;
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Indicates if all other sessions were revoked successfully */
                            status: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/link-social": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Link a social account to the user */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The URL to redirect to after the user has signed in */
                        callbackURL?: string | null;
                        provider: string;
                        idToken?: {
                            token: string;
                            nonce?: string | null;
                            accessToken?: string | null;
                            refreshToken?: string | null;
                            scopes?: unknown[] | null;
                        } | null;
                        requestSignUp?: boolean | null;
                        /** @description Additional scopes to request from the provider */
                        scopes?: unknown[] | null;
                        /** @description The URL to redirect to if there is an error during the link process */
                        errorCallbackURL?: string | null;
                        /** @description Disable automatic redirection to the provider. Useful for handling the redirection yourself */
                        disableRedirect?: boolean | null;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description The authorization URL to redirect the user to */
                            url?: string;
                            /** @description Indicates if the user should be redirected to the authorization URL */
                            redirect: boolean;
                            status?: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/list-accounts": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description List all accounts linked to the user */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            id: string;
                            providerId: string;
                            /** Format: date-time */
                            createdAt: string;
                            /** Format: date-time */
                            updatedAt: string;
                            accountId: string;
                            scopes: string[];
                        }[];
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/delete-user/callback": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Callback to complete user deletion with verification token */
        get: {
            parameters: {
                query?: {
                    token?: string;
                    callbackURL?: string | null;
                };
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description User successfully deleted */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Indicates if the deletion was successful */
                            success: boolean;
                            /**
                             * @description Confirmation message
                             * @enum {string}
                             */
                            message: "User deleted";
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/unlink-account": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Unlink an account */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        providerId: string;
                        accountId?: string | null;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            status?: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/refresh-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Refresh the access token using a refresh token */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The provider ID for the OAuth provider */
                        providerId: string;
                        /** @description The account ID associated with the refresh token */
                        accountId?: string | null;
                        /** @description The user ID associated with the account */
                        userId?: string | null;
                    };
                };
            };
            responses: {
                /** @description Access token refreshed successfully */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            tokenType?: string;
                            idToken?: string;
                            accessToken?: string;
                            refreshToken?: string;
                            /** Format: date-time */
                            accessTokenExpiresAt?: string;
                            /** Format: date-time */
                            refreshTokenExpiresAt?: string;
                        };
                    };
                };
                /** @description Invalid refresh token or provider configuration */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/get-access-token": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Get a valid access token, doing a refresh if needed */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The provider ID for the OAuth provider */
                        providerId: string;
                        /** @description The account ID associated with the refresh token */
                        accountId?: string | null;
                        /** @description The user ID associated with the account */
                        userId?: string | null;
                    };
                };
            };
            responses: {
                /** @description A Valid access token */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            tokenType?: string;
                            idToken?: string;
                            accessToken?: string;
                            refreshToken?: string;
                            /** Format: date-time */
                            accessTokenExpiresAt?: string;
                            /** Format: date-time */
                            refreshTokenExpiresAt?: string;
                        };
                    };
                };
                /** @description Invalid refresh token or provider configuration */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/account-info": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** @description Get the account info provided by the provider */
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody: {
                content: {
                    "application/json": {
                        /** @description The provider given account id for which to get the account info */
                        accountId: string;
                    };
                };
            };
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            user: {
                                id: string;
                                name?: string;
                                email?: string;
                                image?: string;
                                emailVerified: boolean;
                            };
                            data: {
                                [key: string]: unknown;
                            };
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/ok": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Check if the API is working */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description API is working */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            /** @description Indicates if the API is working */
                            ok: boolean;
                        };
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/error": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /** @description Displays an error page */
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description Success */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/html": string;
                    };
                };
                /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
                400: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Unauthorized. Due to missing or invalid authentication. */
                401: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message: string;
                        };
                    };
                };
                /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
                403: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Not Found. The requested resource was not found. */
                404: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
                429: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
                /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
                500: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "application/json": {
                            message?: string;
                        };
                    };
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @enum {string} */
        ServerType: "unimodules" | "citysocieties" | "personal";
        CreateServerDto: {
            /**
             * @description We discuss calisthenics
             * @example Calisthenics
             */
            name: string;
            /** @example personal */
            type: components["schemas"]["ServerType"];
            /**
             * Format: uri
             * @description PUBLIC HTTPS(S) URL to an icon
             * @example https://cdn.example.com/icons/cs.png
             */
            icon?: string;
            /** @description Associated degree identifier */
            degreeId: string;
            /** @description Associated degree-module identifier */
            degreeModuleId: string;
        };
        ServerViewDto: {
            id: string;
            name: string;
            type: components["schemas"]["ServerType"];
            slug: string;
            degreeId: string;
            degreeModuleId: string;
            /** @description BetterAuth user id when the server has an owner */
            ownerId?: string;
            icon?: string;
            createdAt: string;
            updatedAt: string;
        };
        ServerListResponseDto: {
            /** @description list of servers */
            items: components["schemas"]["ServerViewDto"][];
            /** @example 42 */
            total: number;
            /** @example 1 */
            page: number;
            /** @example 20 */
            pageSize: number;
        };
        UpdateServerDto: {
            /**
             * @description We discuss calisthenics
             * @example Calisthenics
             */
            name?: string;
            /** @example personal */
            type?: components["schemas"]["ServerType"];
            /**
             * Format: uri
             * @description PUBLIC HTTPS(S) URL to an icon
             * @example https://cdn.example.com/icons/cs.png
             */
            icon?: string;
            /** @description Associated degree identifier */
            degreeId?: string;
            /** @description Associated degree-module identifier */
            degreeModuleId?: string;
        };
        CreateChannelDto: {
            name: string;
            /** @enum {string} */
            type: "text" | "qa";
            /** @enum {string} */
            privacy: "public" | "hidden";
            position?: number;
            /** @description Optional seed access list for *hidden* channels.
             *     BA user IDs (strings), not ObjectIds. */
            memberIds?: string[];
        };
        ChannelViewDto: {
            /**
             * @description Channel id
             * @example 6710a4f2f23a5a2c5f6f8a1b
             */
            id: string;
            /**
             * @description Server id this channel belongs to
             * @example 670ffe9bd4e2f1d3c9a4b123
             */
            serverId: string;
            /**
             * @description Channel name (unique within server, unless you allow dupes)
             * @example general
             */
            name: string;
            /**
             * @description Channel type
             * @example text
             * @enum {string}
             */
            type: "text" | "qa";
            /**
             * @description Ordering position within the server
             * @example 0
             */
            position: number;
            /**
             * @description Channel privacy
             * @example public
             * @enum {string}
             */
            privacy: "public" | "hidden";
            /**
             * Format: date-time
             * @description Creation timestamp (ISO 8601)
             * @example 2025-09-27T15:21:45.123Z
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description Last update timestamp (ISO 8601)
             * @example 2025-10-01T10:05:12.987Z
             */
            updatedAt: string;
        };
        ChannelListResponseDto: {
            /** @description the public channels for the server */
            publicChannels: unknown[][];
            /** @description private channels the user has joined */
            privateChannels?: components["schemas"]["ChannelViewDto"][];
            /** @example 42 */
            total: number;
            /** @example 1 */
            page: number;
            /** @example 20 */
            pageSize: number;
        };
        CreateAttachmentDto: {
            /**
             * @description Public URL pointing to stored attachment
             * @example https://cdn.example.com/uploads/file.pdf
             */
            url: string;
            /**
             * @description Original filename if provided
             * @example lecture-notes.pdf
             */
            name?: string;
            /**
             * @description Mime type of the attachment
             * @example application/pdf
             */
            mime?: string;
            /**
             * @description File size in bytes
             * @example 1048576
             */
            size?: number;
        };
        CreateMentionDto: {
            /**
             * @description Identifier of the mentioned user (BetterAuth user id)
             * @example usr_01hxt8zshm8yc6a5n8s6k1qj3r
             */
            userId: string;
        };
        CreateMessageDto: {
            /**
             * @description Target channel identifier
             * @example 6710a4f2f23a5a2c5f6f8a1b
             */
            channelId: string;
            /**
             * @description Message Markdown/text content
             * @example Remember to review the lecture slides before Friday's quiz.
             */
            content: string;
            /**
             * @description Name of the author (defaults to session user name)
             * @example Aaliyah Khan
             */
            authorName?: string;
            /** @description List of attachments associated with this message */
            attachments?: components["schemas"]["CreateAttachmentDto"][];
            /** @description Users mentioned in the message content */
            mentions?: components["schemas"]["CreateMentionDto"][];
        };
        MessageViewDto: {
            /**
             * @description Message identifier
             * @example 6750a4f2f23a5a2c5f6f8a1b
             */
            id: string;
            /**
             * @description Channel identifier this message belongs to
             * @example 6710a4f2f23a5a2c5f6f8a1b
             */
            channelId: string;
            /**
             * @description Author identifier (BetterAuth user id)
             * @example usr_01hxt8zshm8yc6a5n8s6k1qj3r
             */
            authorId: string;
            /**
             * @description Name of the Author
             * @example Khan
             */
            authorName: string;
            /** @description Message Markdown/text content */
            content: string;
            /** @description Attachments included with the message */
            attachments?: unknown[][];
            /** @description User mentions referenced in the message */
            mentions?: unknown[][];
            /**
             * Format: date-time
             * @description Timestamp of last edit in ISO 8601 format
             * @example 2025-10-01T10:05:12.987Z
             */
            editedAt?: string;
            /**
             * Format: date-time
             * @description Message creation timestamp (ISO 8601)
             * @example 2025-09-27T15:21:45.123Z
             */
            createdAt: string;
            /**
             * Format: date-time
             * @description Last update timestamp (ISO 8601)
             * @example 2025-10-01T11:05:12.987Z
             */
            updatedAt: string;
        };
        MessageListResponseDto: {
            /** @description Messages ordered chronologically (oldest to newest unless specified) */
            items: unknown[][];
            /**
             * @description Total messages available for the current filter
             * @example 125
             */
            total: number;
            /**
             * @description Current page when using page-based pagination
             * @example 1
             */
            page: number;
            /**
             * @description Number of messages per page
             * @example 50
             */
            pageSize: number;
            /**
             * @description Whether additional pages are available
             * @example false
             */
            hasMore: boolean;
        };
        DegreeViewDto: {
            /** @description Degree identifier */
            id: string;
            /** @description URL-friendly identifier */
            slug: string;
            /** @description Degree name */
            name: string;
            /** @description duration of the years */
            durationYears: number;
            /**
             * @description type of degree
             * @enum {string}
             */
            type: "undergraduate";
        };
        DegreeModuleViewDto: {
            id: string;
            moduleId: string;
            title: string;
            /** @enum {string} */
            kind: "core" | "elective";
            /** @enum {string} */
            term?: "firstterm" | "secondterm" | "full-year";
            year: number;
            description?: string;
            credits?: number;
        };
        DegreeDetailDto: {
            /** @description Degree identifier */
            id: string;
            /** @description URL-friendly identifier */
            slug: string;
            /** @description Degree name */
            name: string;
            /** @description duration of the years */
            durationYears: number;
            /**
             * @description type of degree
             * @enum {string}
             */
            type: "undergraduate";
            modules: components["schemas"]["DegreeModuleViewDto"][];
        };
        User: {
            id?: string;
            name: string;
            email: string;
            /** @default false */
            emailVerified: boolean;
            image?: string;
            /** @default Generated at runtime */
            createdAt: string;
            /** @default Generated at runtime */
            updatedAt: string;
            /** @default false */
            isSuper: boolean;
            degreeSlug: string;
        };
        Session: {
            id?: string;
            expiresAt: string;
            token: string;
            /** @default Generated at runtime */
            createdAt: string;
            updatedAt: string;
            ipAddress?: string;
            userAgent?: string;
            userId: string;
        };
        Account: {
            id?: string;
            accountId: string;
            providerId: string;
            userId: string;
            accessToken?: string;
            refreshToken?: string;
            idToken?: string;
            accessTokenExpiresAt?: string;
            refreshTokenExpiresAt?: string;
            scope?: string;
            password?: string;
            /** @default Generated at runtime */
            createdAt: string;
            updatedAt: string;
        };
        Verification: {
            id?: string;
            identifier: string;
            value: string;
            expiresAt: string;
            /** @default Generated at runtime */
            createdAt: string;
            /** @default Generated at runtime */
            updatedAt: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    AppController_getHello: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": string;
                };
            };
        };
    };
    ServerController_listServer: {
        parameters: {
            query?: {
                /** @description free Text search */
                q?: string;
                page?: number;
                pageSize?: number;
                /** @description Select Type  */
                type?: components["schemas"]["ServerType"];
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Paginated list of servers */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServerListResponseDto"];
                };
            };
        };
    };
    ServerController_createServer: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateServerDto"];
            };
        };
        responses: {
            /** @description The created Server */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServerViewDto"];
                };
            };
        };
    };
    ServerController_getServer: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                serverId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description The requested Server */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServerViewDto"];
                };
            };
        };
    };
    ServerController_update: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                serverId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["UpdateServerDto"];
            };
        };
        responses: {
            /** @description The updated Server */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ServerViewDto"];
                };
            };
        };
    };
    ChannelsController_list: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                serverId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description returns a channel list visible to the user */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ChannelListResponseDto"];
                };
            };
        };
    };
    ChannelsController_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                serverId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateChannelDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ChannelViewDto"];
                };
            };
        };
    };
    ChannelsController_find: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                channelId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description returns the desired channel */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ChannelViewDto"];
                };
            };
        };
    };
    ChannelsController_addMembers: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                channelId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description returns when adding a member in ther channel if the channel is hidden */
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    ChannelsController_removeMember: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                channelId: string;
                userId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description this handler deletes a member from the channel */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    MessagesController_listMessages: {
        parameters: {
            query: {
                page: string;
                pageSize: string;
            };
            header?: never;
            path: {
                serverId: string;
                channelId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MessageListResponseDto"];
                };
            };
        };
    };
    MessagesController_create: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                serverId: string;
                channelId: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CreateMessageDto"];
            };
        };
        responses: {
            201: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MessageViewDto"];
                };
            };
        };
    };
    DegreeController_listDegrees: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DegreeViewDto"][];
                };
            };
        };
    };
    DegreeController_getDegree: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DegreeDetailDto"];
                };
            };
        };
    };
    DegreeController_listModules: {
        parameters: {
            query?: never;
            header?: never;
            path: {
                slug: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DegreeModuleViewDto"][];
                };
            };
        };
    };
    socialSignIn: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Callback URL to redirect to after the user has signed in */
                    callbackURL?: string | null;
                    newUserCallbackURL?: string | null;
                    /** @description Callback URL to redirect to if an error happens */
                    errorCallbackURL?: string | null;
                    provider: string;
                    /** @description Disable automatic redirection to the provider. Useful for handling the redirection yourself */
                    disableRedirect?: boolean | null;
                    idToken?: {
                        /** @description ID token from the provider */
                        token: string;
                        /** @description Nonce used to generate the token */
                        nonce?: string | null;
                        /** @description Access token from the provider */
                        accessToken?: string | null;
                        /** @description Refresh token from the provider */
                        refreshToken?: string | null;
                        /** @description Expiry date of the token */
                        expiresAt?: number | null;
                    } | null;
                    /** @description Array of scopes to request from the provider. This will override the default scopes passed. */
                    scopes?: unknown[] | null;
                    /** @description Explicitly request sign-up. Useful when disableImplicitSignUp is true for this provider */
                    requestSignUp?: boolean | null;
                    /** @description The login hint to use for the authorization code request */
                    loginHint?: string | null;
                };
            };
        };
        responses: {
            /** @description Success - Returns either session details or redirect URL */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @enum {boolean} */
                        redirect: false;
                        /** @description Session token */
                        token: string;
                    };
                };
            };
            /** @description Bad Request. Usually due to missing parameters, or invalid parameters. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                };
            };
            /** @description Unauthorized. Due to missing or invalid authentication. */
            401: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message: string;
                    };
                };
            };
            /** @description Forbidden. You do not have permission to access this resource or to perform this action. */
            403: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message?: string;
                    };
                };
            };
            /** @description Not Found. The requested resource was not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message?: string;
                    };
                };
            };
            /** @description Too Many Requests. You have exceeded the rate limit. Try again later. */
            429: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message?: string;
                    };
                };
            };
            /** @description Internal Server Error. This is a problem with the server that you cannot fix. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        message?: string;
                    };
                };
            };
        };
    };
}
